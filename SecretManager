Secret Manager
---------------
Capabilities
- Secure Centrally
- Rotate secret Safely
- Support for client side caching :- which means the secret can be store in client end securly 
##- Tag based access control

Usecase:- when you multiple applications like APP1 APP2 APP3
For every stored credential of APP1 will be tagged with "Application: APP1"
similarly for every application of APP2 will be tagged with "Application: APP2"
Now APP1 IAM user should be given access to APP1 Secret Manager credentials similaly to APP2 
Now if the new employees joins the team,Just assign the policy to the group


Tips:-
##Operate Secrets Mangaer in each AWS accounts
##Set up coventions of Naming,rotation,retriving
- Pro Tip:- Use Hierachical names Prod/MyApp/Mysql
Use description to record details about the secret
Use Tags to group secrets and manage these easily at scale.


Use Tags to group secrets and manage these easily at scale.
##IAM poliy with conditin like
StringLike" : {
 "SecretManger:RequestTag/Team" : "<tag value>"	
 }


##Integrations
cloudtrails  for Audit records
monitoring : Use cloudwatchwatch 
#Put events for secrets "put for deletion" ; Cloud watch events for notification ;  cloud trail for auditing
#Monitor high value secrets;cloudtrail records all SM API calls
if you dont need to secret put for "schedule of deletion"

