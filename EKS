EKS
Managed kubernetes platform

- AWS manages Master nodes
- Necessary apps pre- installed
- Scaling and backup


1. VPC
2. IAM role and security 

A- Create Cluster control plane with the role 
		- Choose cluster name, K8s version 
		- Choose region and VPC for your cluster
		- Set security for your cluster.

B. Create Worker node and connect connet to cluster
        - Create as a Node group(Group of nodes)
        - Choose cluster it will attach to 
        -  Define Security group, select instance type and resource
        -  Define Max and min Nodes :- Autoscaling 


C. Create worker Nodes and connect to cluster.


#Another Method to do things Faster than Above
EKSctl

# Install EKSctl
curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
cp /tmp/eksctl /usr/bin

# Verify  eksctl version
# eksctl create cluster \
--name test-cluster
--version 1.17
--region eu-central-1
--nodegroup-name linux-nodes
--node-type t2.micro
--node 2

At the end of the Above command this will be cconfig kube config which will be the location ~/<username>/.kube/config


Method1:-
1.Cluster Creation 
Create IAM ROle for service service "EKS cluster" and policy is Amazon EKSclusterPolicy
select VPC and default subnets
Cluster endpoint access
Create cluster


2.Create Node groups
From the cluster select  compute -- > Add Node group
Name of the Nodegroup
IAM role for node group :- 
		IAM roles--service "EC2"
		Policy  :- 
				- Amazon EKS worker Node policy
				- AMazon EKS_CNI policy
				- Amazon EC2containerRegistryReadOnly

select instance type, disk size, Node group scaling configration 	
Node group update configration :- which is minimum no of nodes that should be running 	


aws sts get-caller-identity
check if the aws version 1.9+
aws eks --region <region> update-kubeconfig --name <name of the cluster>
Install kubectl 
kubetctl get nodes // This will show the nodes if the verify command is working properly

kubectl create -f https://raw.githubusercontent.com/javahometech/kubernetes/master/pods/pods.yml

#Kubetctl get pods.

kubeconfig File
Kubeconfig file is a way to organize information about cluster,users,namespaces and authentication mechanims
so the Kubectl command-line tool uses kubeconfig files to find the information it needs about a cluster and to understand how to communicate with API server of that cluster


#kubectl get nodes

#To delete the cluster
eksctl delete cluster --name test-cluster
