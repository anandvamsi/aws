

Leverage the Spot market












--------------------
AWS Cost Optimization
AWS cost optimization best practices is an one stop process its a an ongoing process.
It needs to be monitored at all times to identify when assets are being under-utilized  and when opportunities exist to reduce costs by deleting/terminating/releasing zombie assets.

Resources standardization  and Cost saving for AWS:

#Migrate the application only if it is needed



#Need to set up Budget levels for each account and threshold Alarms for each account.

#Reserved Instances.
Reserved Instance(RI) can save up to 75% compared to on-demand pricing

Few Benefits of RIs:
Once purchased, RIs can be modified in several ways at no additional cost:
• Switching Availability Zones within the same region
• Switching between EC2 classic and Virtual Private Cloud
• Altering the instance type within the same family (this includes both
splitting & merging instance types)
• Changing the account that benefits from the RI purchase 
#Leverage the Spot market::Spot Instances

Tip:
A 1-year term reservation will almost always break-even after six months. This is when you can shut down an instance and still benefit from the reservation’s pricing discount. For a 3-year reservation, the break-even point usually occurs around nine months. 

RI resources: RDS,EC2,Elastic Cache,RedShift.


#Right size your resources EC2 and EBS volumes
-I would prefer go with least option first, and eventually scale it based on the requirement.
Over-provisioning an EC2 instance can lead to exponentially higher costs.
Without performance monitoring or cloud management tools, it’s hard to tell when assets are over- or under-provisioned. 
-AWS compute optimize
       - AWS compute optimize is free of cost uses ML to analyze  2weeks of data (CPU,N/W), if cloudwatch is setup in the instance
       it will analyze memory too.
       - Reviewing these trended metrics over time, you can make decisions around reducing the size of the instance without hurting the performance of the applications on the instance
- Tip:
A good starting place for rightsizing is to look for instances that have an Avg CPU < 5% and Max CPU < 20% for 30 days.
Instances that fit this criteria are viable candidates for rightsizing or termination.

#Scheduling On/Off Times
- Typical use case:
Intances that are running 24/7,Amazon will bill for 672 to 744 hours per instance, depending
on the month. If an instance is turned off between 5pm and 9am on weekdays and stopped weekends and holidays, then total billable hours per month would range from 152 to 184 hours per instance, saving you 488 to 592 instance hours per month


#Automate the resource lifecycle create and terminate
- Ideal candidates:: S3, EBS volumnes
- S3::Move Infrequently-Accessed Data to Lower Cost Tiers



#Terminate Zombie Assets::Delete the unused/orphan volumes ,EIPs.
-  Release Unattached Elastic IP Addresses
-  Delete the unused EBS volumes 
		- option1: we can get data from cloud custodian across the organization 
-  Load Balancer with no traffic
-  Delete the aged snapshots
     - A compounding factor on this issue is that users can configure settings to automatically create subsequent snapshots on a daily basis we have control on  creating/deleting snapshots
     - Delete snapshots based on thresold periods.
-  Delete the unsed RDS instances.

EBS Volume tips::
If a volume is attached to an instance and barely has any
read/writes on that volume, the instance is either inactive or the volume is unnecessary. These re good candidates to flag for
rightsizing evaluation.

It’s typical to see General Purpose SSD or Provisioned IOPS SSD volumes that barely have any read/writes for a long period of time. They can be downgraded to Throughput Optimized HDD or even Cold HDD volumes in
order to reduce cost

#Upgrade Instances to the Latest Generation
- With AWS announcements on latest products,release of new generation instance that have improved performance.
- Either it can upgrade instance for superior performace for low cost or change the instance types 
UseCase:
upgrading a c1.xlarge to a c3.xlarge will cut costs by up to 60% while offering significantly faster processing. 


#Long Term goal:: making use of ECS and serverless Computing.




--Reservation notes


Reservation:

Reservation is mostly a financial tool, you commit to pay for resources during 1 or 3 years and get a discount over the on-demand price

Reservation comes with 3 different payment option
- Full Upfront
- Partial Upfront
- No Upfront.

With partial and no upfront, you pay the remaining balance monthly over the ter

Two types of reservations:
- Standard
- covertable
Convertible lets you change the instance family but comes with a smaller discount compared to standard

we  can reserve a lot of things and not only Amazon EC2 instances: Amazon RDS, Amazon Elasticache, Amazon Redshift, Amazon DynamoDB, etc.

Reservation Inspection has to done at least 2 times in a year understand the resources that need to reserved for next year and vice versa by understanding the growth of the project/application.



Leverage the Spot market












--------------------
AWS Cost Optimization
AWS cost optimization best practices is an one stop process its a an ongoing process.
It needs to be monitored at all times to identify when assets are being under-utilized  and when opportunities exist to reduce costs by deleting/terminating/releasing zombie assets.

Resources standardization  and Cost saving for AWS:

#Migrate the application only if it is needed



#Need to set up Budget levels for each account and threshold Alarms for each account.

#Reserved Instances.
Reserved Instance(RI) can save up to 75% compared to on-demand pricing

Few Benefits of RIs:
Once purchased, RIs can be modified in several ways at no additional cost:
• Switching Availability Zones within the same region
• Switching between EC2 classic and Virtual Private Cloud
• Altering the instance type within the same family (this includes both
splitting & merging instance types)
• Changing the account that benefits from the RI purchase 
#Leverage the Spot market::Spot Instances

Tip:
A 1-year term reservation will almost always break-even after six months. This is when you can shut down an instance and still benefit from the reservation’s pricing discount. For a 3-year reservation, the break-even point usually occurs around nine months. 

RI resources: RDS,EC2,Elastic Cache,RedShift.


#Right size your resources EC2 and EBS volumes
-I would prefer go with least option first, and eventually scale it based on the requirement.
Over-provisioning an EC2 instance can lead to exponentially higher costs.
Without performance monitoring or cloud management tools, it’s hard to tell when assets are over- or under-provisioned. 
-AWS compute optimize
       - AWS compute optimize is free of cost uses ML to analyze  2weeks of data (CPU,N/W), if cloudwatch is setup in the instance
       it will analyze memory too.
       - Reviewing these trended metrics over time, you can make decisions around reducing the size of the instance without hurting the performance of the applications on the instance
- Tip:
A good starting place for rightsizing is to look for instances that have an Avg CPU < 5% and Max CPU < 20% for 30 days.
Instances that fit this criteria are viable candidates for rightsizing or termination.

#Scheduling On/Off Times
- Typical use case:
Intances that are running 24/7,Amazon will bill for 672 to 744 hours per instance, depending
on the month. If an instance is turned off between 5pm and 9am on weekdays and stopped weekends and holidays, then total billable hours per month would range from 152 to 184 hours per instance, saving you 488 to 592 instance hours per month


#Automate the resource lifecycle create and terminate
- Ideal candidates:: S3, EBS volumnes
- S3::Move Infrequently-Accessed Data to Lower Cost Tiers



#Terminate Zombie Assets::Delete the unused/orphan volumes ,EIPs.
-  Release Unattached Elastic IP Addresses
-  Delete the unused EBS volumes 
		- option1: we can get data from cloud custodian across the organization 
-  Load Balancer with no traffic
-  Delete the aged snapshots
     - A compounding factor on this issue is that users can configure settings to automatically create subsequent snapshots on a daily basis we have control on  creating/deleting snapshots
     - Delete snapshots based on thresold periods.
-  Delete the unsed RDS instances.

EBS Volume tips::
If a volume is attached to an instance and barely has any
read/writes on that volume, the instance is either inactive or the volume is unnecessary. These re good candidates to flag for
rightsizing evaluation.

It’s typical to see General Purpose SSD or Provisioned IOPS SSD volumes that barely have any read/writes for a long period of time. They can be downgraded to Throughput Optimized HDD or even Cold HDD volumes in
order to reduce cost

#Upgrade Instances to the Latest Generation
- With AWS announcements on latest products,release of new generation instance that have improved performance.
- Either it can upgrade instance for superior performace for low cost or change the instance types 
UseCase:
upgrading a c1.xlarge to a c3.xlarge will cut costs by up to 60% while offering significantly faster processing. 


#Long Term goal:: making use of ECS and serverless Computing.
